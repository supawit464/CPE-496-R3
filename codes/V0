#include <WiFi.h>
#include <PubSubClient.h>

// ข้อมูล Wi-Fi ของคุณ
const char* ssid = "LABTOP-621";
const char* password = "Tni54321";

// ข้อมูล MQTT Broker ของคุณ
const char* mqtt_server = "192.168.137.1"; 
const int mqtt_port = 1883; 

// Topic สำหรับ Publish และ Subscribe
const char* mqtt_publish_topic = "esp32/output";
const char* mqtt_subscribe_topic = "esp32/input";

WiFiClient espClient;
PubSubClient client(espClient);

long lastMsg = 0;
char msg[128];  
int value = 0;

// กำหนดขาที่ต่อ sensor ความชื้นดิน
#define SOIL_MOISTURE_PIN 34  

void setup_wifi() {
  delay(10);
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

// ฟังก์ชัน Callback เมื่อได้รับข้อความ MQTT
void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
  }
  Serial.println();
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    String clientId = "ESP32Client-";
    clientId += String(random(0xffff), HEX);
    if (client.connect(clientId.c_str())) {
      Serial.println("connected");
      client.subscribe(mqtt_subscribe_topic);
      Serial.print("Subscribed to: ");
      Serial.println(mqtt_subscribe_topic);
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      delay(5000);
    }
  }
}

void setup() {
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, mqtt_port);
  client.setCallback(callback);

  // ตั้งค่า seed สำหรับ random
  randomSeed(analogRead(0));

  // กำหนดขา analog input
  pinMode(SOIL_MOISTURE_PIN, INPUT);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  long now = millis();
  if (now - lastMsg > 5000) { // ทุกๆ 5 วินาที
    lastMsg = now;
    ++value;

    // สุ่มค่าจำลองจาก sensor อื่น ๆ
    int temp  = random(20, 46);     
    int humid = random(40, 81);     
    int soilPercents = random(60,90);
    // อ่านค่าความชื้นดินจาก ADC
    int soilRaw = analogRead(SOIL_MOISTURE_PIN);
    // แปลงเป็นเปอร์เซ็นต์ (0 = แห้งมาก, 100 = ชื้นมาก)
    int soilPercent = map(soilRaw, 0, 4095, 100, 0); 

    // สร้าง JSON payload
    sprintf(msg, "{\"temp\": %d, \"humid\": %d, \"soil\": %d}", temp, humid, soilPercents);

    Serial.print("Publishing JSON to topic '");
    Serial.print(mqtt_publish_topic);
    Serial.print("': ");
    Serial.println(msg);

    client.publish(mqtt_publish_topic, msg);
  }
}
